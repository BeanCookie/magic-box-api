name: Go

on: push
jobs:
  test:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
      - name: Run Unit Tests
        run: go test

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Extract Version
      id: version_step
      env:
        REPOSITORY_NAME: luzhong256
      run: |
        echo "::set-output name=version::${GITHUB_REF#$"refs/tags/v"}"
        echo "::set-output name=version_tag::$REPOSITORY_NAME:${GITHUB_REF#$"refs/tags/v"}"
        echo "::set-output name=latest_tag::$REPOSITORY_NAME:latest"

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: PrepareReg Names
      id: read-docker-image-identifiers
      run: |
        echo VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
        echo LASTEST_TAG=$(echo ${{ steps.version_step.outputs.latest_tag  }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

    - name: Build and Push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.VERSION_TAG }}
          ${{ env.LASTEST_TAG }}
        build-args: |
          ${{ steps.version_step.outputs.version }}

    - name: Restart Cloud Tencent
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script:           
          sh ${{ secrets.RUN_SCRIPT_PATH }}

